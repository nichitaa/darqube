{"version":3,"sources":["components/StyledLayout/index.tsx","components/StyledNav/index.tsx","layout/Navbar.tsx","layout/AppLayout.tsx","routes/routes.tsx","App.tsx","store/news/reducer.ts","store/createRootReducer.ts","store/index.ts","index.tsx","store/news/types.ts","utils/convertDate.ts","utils/search.ts","utils/updateBookmark.ts","utils/showMessage.ts","services/api.ts","store/news/actions.ts","hooks/useTypedSelector.ts","hooks/usePagination.ts","hooks/useProgressiveImage.ts","components/Card/StyledCard.tsx","components/Card/Card.tsx","components/StyledPaginationButton/index.ts","components/Pagination/index.tsx","components/StyledPageLayout/index.tsx"],"names":["StyledAppLayout","styled","div","StyledLatestNews","StyledNav","props","hasSearch","StyledLink","isSelected","Navbar","dispatch","useDispatch","useState","search","setSearch","pathname","useTypedSelector","state","router","location","useEffect","trim","onNewsResetSearchAction","length","onNewsSearchAction","justify","xs","sm","md","lg","xl","to","className","value","onChange","e","target","prefix","SearchOutlined","style","color","placeholder","AppLayout","children","news","loading","fetchNewsAction","spinning","card","latest","routes","path","component","lazy","exact","Routes","fallback","map","App","store","history","initialState","displayedNews","error","undefined","reducer","action","type","NewsActionTypes","NEWS_REQUEST","NEWS_REQUEST_ERROR","payload","UPDATE_NEWS","UPDATE_DISPLAYED_NEWS","createRootReducer","combineReducers","newsReducer","connectRouter","logger","createLogger","collapsed","middlewares","thunk","composeEnhancers","window","compose","createBrowserHistory","basename","process","rootReducer","createStore","applyMiddleware","routerMiddleware","app","render","document","getElementById","LOCAL_STORAGE_KEY","convertDate","unix","n","Date","month","getMonth","date","getDate","arr","searchString","temp","forEach","el","headline","toLowerCase","includes","summary","push","updateBookmark","id","bool","isBookmark","showMessage","msg","duration","message","AppleApiService","baseUrl","token","a","fetch","this","response","json","instance","api","getInstance","fetchNews","sort","x","y","datetime","valueOf","storageBookmarks","localStorage","getItem","bookmarks","JSON","parse","i","found","find","f","isLatest","setItem","stringify","getState","key","filter","updateBookmarkAction","tempNews","tempDisplayed","useSelector","usePagination","startIdx","setStartIdx","endIdx","setEndIdx","next","prev","useProgressiveImage","src","sourceLoaded","setSourceLoaded","img","Image","onload","StyledCard","Card","imageLoaded","image","onClick","open","url","span","related","align","shape","stopPropagation","icon","size","source","StyledPaginationButton","Button","Pagination","data","opacity","StyledPageLayout"],"mappings":"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","file":"static/js/main.fac92020.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledAppLayout = styled.div`\r\n  padding: 25px 30px 10px 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  .ant-spin-container {\r\n    display: flex;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    & {\r\n      flex-direction: column;\r\n\r\n      .latest-news {\r\n        margin-bottom: 18px;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const StyledLatestNews = styled.div`\r\n  width: 478px;\r\n  margin-right: 24px;\r\n`;","import styled from 'styled-components';\r\n\r\ntype MainPropsNav = {\r\n    hasSearch: boolean\r\n}\r\n\r\nexport const StyledNav = styled.div<MainPropsNav>`\r\n  padding: 25px 30px 0 30px;\r\n  font-family: 'Ubuntu', sans-serif;\r\n\r\n  .ant-input-affix-wrapper {\r\n    background-color: #191818;\r\n    border: none;\r\n    box-shadow: ${props => props.hasSearch ? '0 0 0 2px rgb(104 104 104 / 20%)' : 'none'};\r\n  }\r\n\r\n  .ant-input-affix-wrapper-focused {\r\n    box-shadow: 0 0 0 2px rgb(104 104 104 / 20%);\r\n  }\r\n\r\n  .search-input {\r\n    width: 232px;\r\n    height: 32px;\r\n  }\r\n\r\n  input {\r\n    background-color: #191818;\r\n    color: #686868;\r\n    margin-left: 4px;\r\n  }\r\n\r\n`;\r\n\r\ntype MainPropsNavLink = {\r\n    isSelected: boolean\r\n}\r\n\r\nexport const StyledLink = styled.div<MainPropsNavLink>`\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: #FFFFFF;\r\n  opacity: ${props => props.isSelected ? 1 : .5}\r\n`;","import React, {useEffect, useState} from 'react';\r\nimport {onNewsResetSearchAction, onNewsSearchAction} from '../store/news/actions';\r\nimport {StyledLink, StyledNav} from '../components/StyledNav';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport {useTypedSelector} from '../hooks';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {Col, Input, Row} from 'antd';\r\n\r\nconst Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState<string>('');\r\n    const {pathname} = useTypedSelector(state => state.router.location as any);\r\n\r\n    // search logic depending on which page the user is on\r\n    useEffect(() => {\r\n        if (search.trim() === '') {\r\n            dispatch(onNewsResetSearchAction());\r\n        } else if (search.trim().length >= 3) {\r\n            dispatch(onNewsSearchAction(search));\r\n        }\r\n    }, [pathname, dispatch, search]);\r\n\r\n    return (\r\n        <StyledNav hasSearch={search.trim().length > 0}>\r\n            <Row justify={'space-between'}>\r\n                <Col xs={8} sm={12} md={12} lg={12} xl={12}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={'/'}>\r\n                                <StyledLink isSelected={pathname === '/'}>\r\n                                    News\r\n                                </StyledLink>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col>\r\n                            <Link to={'/bookmarks'}>\r\n                                <StyledLink isSelected={pathname === '/bookmarks'}>\r\n                                    Bookmarks\r\n                                </StyledLink>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Input\r\n                        className={'search-input'}\r\n                        value={search}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        prefix={<SearchOutlined style={{color: 'white'}}/>} placeholder={'Search news and bookmarks'}/>\r\n                </Col>\r\n            </Row>\r\n        </StyledNav>\r\n    );\r\n};\r\n\r\n\r\nexport default Navbar;","import React, {FC, useEffect} from 'react';\r\nimport {StyledAppLayout, StyledLatestNews} from '../components/StyledLayout';\r\nimport {fetchNewsAction} from '../store/news/actions';\r\nimport {useTypedSelector} from '../hooks';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Card} from '../components';\r\nimport Navbar from './Navbar';\r\nimport {Spin} from 'antd';\r\n\r\nconst AppLayout: FC = ({children}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {news, loading} = useTypedSelector(state => state.news);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchNewsAction());\r\n    }, [dispatch]);\r\n\r\n    return <>\r\n        <Navbar/>\r\n        <Spin spinning={loading}>\r\n            <StyledAppLayout>\r\n                <StyledLatestNews className={'latest-news'}>\r\n                    {news && news[0] && <Card card={news[0]} latest={true}/>}\r\n                </StyledLatestNews>\r\n                {children}\r\n            </StyledAppLayout>\r\n        </Spin>\r\n    </>;\r\n};\r\n\r\n\r\nexport default AppLayout;","import React, {FC, lazy, Suspense} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Spin} from 'antd';\r\n\r\n\r\nconst routes = [{\r\n    path: '/',\r\n    component: lazy(() => import('../pages/News')),\r\n    exact: true\r\n}, {\r\n    path: '/bookmarks',\r\n    component: lazy(() => import('../pages/Bookmarks')),\r\n    exact: true\r\n}];\r\n\r\nconst Routes: FC = () => (\r\n    <Switch>\r\n        <Suspense fallback={<Spin spinning={true}/>}>\r\n            {routes.map(({component, path, exact}) =>\r\n                <Route\r\n                    path={path}\r\n                    key={path}\r\n                    exact={exact}\r\n                    component={component}\r\n                />\r\n            )}\r\n        </Suspense>\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\nimport {ApplicationState} from './store/createRootReducer';\nimport {ConnectedRouter} from 'connected-react-router';\nimport AppLayout from './layout/AppLayout';\nimport {Provider} from 'react-redux';\nimport {History} from 'history';\nimport {Store} from 'redux';\nimport Routes from './routes/routes';\n\ninterface MainProps {\n    store: Store<ApplicationState>;\n    history: History;\n}\n\nconst App: React.FC<MainProps> = ({store, history}) => (\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <AppLayout>\n                <Routes/>\n            </AppLayout>\n        </ConnectedRouter>\n    </Provider>\n);\n\n\nexport default App;\n","import {Reducer} from 'react';\r\nimport {INewsState, NewsAction, NewsActionTypes} from './types';\r\n\r\nexport const initialState: INewsState = {\r\n    news: [],\r\n    displayedNews: [],\r\n    loading: false,\r\n    error: undefined\r\n};\r\n\r\n\r\nexport const reducer: Reducer<INewsState, NewsAction> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NewsActionTypes.NEWS_REQUEST:\r\n            return {...state, loading: true};\r\n        case NewsActionTypes.NEWS_REQUEST_ERROR:\r\n            return {...state, loading: false, error: action.payload};\r\n        case NewsActionTypes.UPDATE_NEWS:\r\n            return {...state, loading: false, news: action.payload};\r\n        case NewsActionTypes.UPDATE_DISPLAYED_NEWS:\r\n            return {...state, displayedNews: action.payload};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport {reducer as newsReducer};\r\n\r\n\r\n","import {History} from 'history';\r\nimport {combineReducers} from 'redux';\r\nimport {connectRouter, RouterState} from 'connected-react-router';\r\nimport {INewsState} from './news/types';\r\nimport {newsReducer} from './news/reducer';\r\n\r\n\r\nexport interface ApplicationState {\r\n    news: INewsState,\r\n    router: RouterState;\r\n}\r\n\r\nconst createRootReducer = (history: History) =>\r\n    combineReducers({\r\n        news: newsReducer,\r\n        router: connectRouter(history)\r\n    });\r\n\r\nexport default createRootReducer;","import {Action, applyMiddleware, compose, createStore} from 'redux';\r\nimport {routerMiddleware} from 'connected-react-router';\r\nimport createRootReducer from './createRootReducer';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {createBrowserHistory} from 'history';\r\nimport {createLogger} from 'redux-logger';\r\n\r\n\r\nconst logger = createLogger({collapsed: true});\r\nconst middlewares = [thunk, logger];\r\n// @ts-ignore\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n\r\n\r\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL});\r\nconst rootReducer = createRootReducer(history);\r\nexport const store = createStore(\r\n    rootReducer,\r\n    {} as any,\r\n    composeEnhancers(applyMiddleware(routerMiddleware(history), ...middlewares))\r\n);\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, AppRootState, null, Action<string>>;","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport {history, store} from './store';\n\nconst app = <App store={store} history={history}/>;\nrender(app, document.getElementById('root'));\n\n","import {INews} from '../../types/news';\r\n\r\nexport enum NewsActionTypes {\r\n    NEWS_REQUEST = '@@NEWS/NEWS_REQUEST',\r\n    NEWS_REQUEST_ERROR = '@@NEWS/NEWS_REQUEST_ERROR',\r\n    UPDATE_NEWS = '@@NEWS/UPDATE_NEWS',\r\n    UPDATE_DISPLAYED_NEWS = '@@NEWS/UPDATE_DISPLAYED_NEWS'\r\n}\r\n\r\nexport type NewsAction = {\r\n    type: NewsActionTypes,\r\n    payload?: any\r\n}\r\n\r\nexport interface INewsState {\r\n    news: INews[],\r\n    displayedNews: INews[],\r\n    loading: boolean,\r\n    error: undefined | string\r\n}\r\n\r\nexport const LOCAL_STORAGE_KEY = 'news-bookmarks';","// n -> UNIX timestamp\r\nconst convertDate = (unix: number): string => {\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const n = new Date(unix * 1000);\r\n\r\n    // const year = n.getFullYear();\r\n    // const hour = n.getHours();\r\n    // const min = n.getMinutes();\r\n    // const sec = n.getSeconds();\r\n\r\n    const month = months[n.getMonth()];\r\n    const date = n.getDate();\r\n    return `${date} ${month}`;\r\n};\r\n\r\nexport default convertDate;","import {INews} from '../types/news';\r\n\r\nconst search = (arr: INews[], searchString: string): INews[] => {\r\n    let temp: INews[] = []\r\n    arr.forEach(el => {\r\n        if (el.headline.toLowerCase().includes(searchString) || el.summary.toLowerCase().includes(searchString)) {\r\n            temp.push(el);\r\n        }\r\n    });\r\n    return temp;\r\n};\r\nexport default search;","import {INews} from '../types/news';\r\n\r\nconst updateBookmark = (arr: INews[], id: number, bool: boolean): INews[] => {\r\n    return arr.map((el: any) => {\r\n        if (el.id === id) return {...el, isBookmark: bool};\r\n        else return el;\r\n    });\r\n};\r\nexport default updateBookmark;","import {message} from 'antd';\r\n\r\nconst showMessage = (type: 'info' | 'success' | 'error' | 'warning' | 'loading', msg: string, duration: number): void => {\r\n    message[type](msg, duration)\r\n}\r\n\r\nexport default showMessage;","export class AppleApiService {\r\n    private static instance: AppleApiService;\r\n    private baseUrl = 'https://finnhub.io/api/v1/';\r\n    private token = 'bpjsf67rh5r9328ecgvg';\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    public static getInstance(): AppleApiService {\r\n        if (!AppleApiService.instance) {\r\n            AppleApiService.instance = new AppleApiService();\r\n        }\r\n        return AppleApiService.instance;\r\n    }\r\n\r\n    async fetchNews(): Promise<any> {\r\n        const response = await fetch(`${this.baseUrl}company-news?symbol=AAPL&from=2021-03-01&to=2021-03-15&token=${this.token}`);\r\n        const json = await response.json();\r\n        return json;\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {LOCAL_STORAGE_KEY, NewsAction, NewsActionTypes} from './types';\r\nimport {convertDate, search, showMessage, updateBookmark} from '../../utils';\r\nimport {ApplicationState} from '../createRootReducer';\r\nimport {AppleApiService} from '../../services/api';\r\nimport {INews} from '../../types/news';\r\n\r\nexport const fetchNewsAction = () => async (dispatch: Dispatch<NewsAction>) => {\r\n    try {\r\n        dispatch({type: NewsActionTypes.NEWS_REQUEST});\r\n\r\n        const api = AppleApiService.getInstance();\r\n        let news = await api.fetchNews();\r\n        if (!news.error) {\r\n            news = news.sort((x: any, y: any) => new Date(y.datetime * 1000).valueOf() - new Date(x.datetime * 1000).valueOf());\r\n\r\n            let temp: INews[];\r\n\r\n            const storageBookmarks = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n            if (storageBookmarks) {\r\n                const bookmarks = JSON.parse(storageBookmarks);\r\n                temp = news.map((el: any, i: number) => {\r\n                    const found = bookmarks.find((f: any) => f === el.id);\r\n                    return {\r\n                        ...el,\r\n                        isLatest: i === 0,\r\n                        isBookmark: !!found,\r\n                        datetime: convertDate(el.datetime)\r\n                    };\r\n                });\r\n            } else {\r\n                localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify([]));\r\n                temp = news.map((el: any, i: number) => ({\r\n                    ...el,\r\n                    isLatest: i === 0,\r\n                    isBookmark: false,\r\n                    datetime: convertDate(el.datetime)\r\n                }));\r\n            }\r\n            dispatch({type: NewsActionTypes.UPDATE_NEWS, payload: temp});\r\n            dispatch({type: NewsActionTypes.UPDATE_DISPLAYED_NEWS, payload: temp});\r\n        } else {\r\n            showMessage('error', news.error, 5);\r\n            dispatch({type: NewsActionTypes.NEWS_REQUEST_ERROR, payload: news.error});\r\n        }\r\n    } catch (err: any) {\r\n        dispatch({type: NewsActionTypes.NEWS_REQUEST_ERROR, payload: err.message});\r\n    }\r\n};\r\n\r\nexport const onNewsResetSearchAction = () => (dispatch: Dispatch<NewsAction>, getState: () => ApplicationState) => {\r\n    const {news: {news}} = getState();\r\n    dispatch({type: NewsActionTypes.UPDATE_DISPLAYED_NEWS, payload: news});\r\n};\r\n\r\nexport const onNewsSearchAction = (key: string) => (dispatch: Dispatch<NewsAction>, getState: () => ApplicationState) => {\r\n    const {router: {location}} = getState();\r\n    const {news: {news}} = getState();\r\n\r\n    const searchString = key.toLowerCase();\r\n    switch (location.pathname) {\r\n        case '/': {\r\n            const found = search(news, searchString);\r\n            dispatch({type: NewsActionTypes.UPDATE_DISPLAYED_NEWS, payload: found});\r\n            break;\r\n        }\r\n        case '/bookmarks': {\r\n            const bookmarks = news.filter(el => el.isBookmark);\r\n            const found = search(bookmarks, searchString);\r\n            dispatch({type: NewsActionTypes.UPDATE_DISPLAYED_NEWS, payload: found});\r\n            break;\r\n        }\r\n        default:\r\n            return false;\r\n    }\r\n};\r\n\r\nexport const updateBookmarkAction = (id: number, bool: boolean) => (dispatch: Dispatch<NewsAction>, getState: () => ApplicationState) => {\r\n    const storageBookmarks = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n\r\n    if (bool) {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify([...JSON.parse(storageBookmarks!), id]));\r\n    } else {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify([...JSON.parse(storageBookmarks!).filter((el: number) => el !== id)]));\r\n    }\r\n\r\n    const {news: {news, displayedNews}} = getState();\r\n    const tempNews = updateBookmark(news, id, bool);\r\n    const tempDisplayed = updateBookmark(displayedNews, id, bool);\r\n\r\n    dispatch({type: NewsActionTypes.UPDATE_DISPLAYED_NEWS, payload: tempDisplayed});\r\n    dispatch({type: NewsActionTypes.UPDATE_NEWS, payload: tempNews});\r\n};","import {TypedUseSelectorHook, useSelector} from 'react-redux';\r\nimport {AppRootState} from '../store';\r\n\r\nconst useTypedSelector: TypedUseSelectorHook<AppRootState> = useSelector;\r\nexport default useTypedSelector;","import {useState} from 'react';\r\nimport {INews} from '../types/news';\r\n\r\ntype PaginationHook = (arr: INews[]) => { startIdx: number, endIdx: number, next: () => void, prev: () => void }\r\n\r\nconst usePagination: PaginationHook = (arr) => {\r\n    const step = 6;\r\n    const [startIdx, setStartIdx] = useState<number>(0);\r\n    const [endIdx, setEndIdx] = useState<number>(step);\r\n\r\n    const next = () => {\r\n        if (arr.length <= endIdx) {\r\n            return false;\r\n        } else {\r\n            setStartIdx(prev => prev += step);\r\n            if(endIdx + step >= arr.length) {\r\n                setEndIdx(prev => arr.length)\r\n            } else {\r\n                setEndIdx(prev => prev += step);\r\n            }\r\n        }\r\n    };\r\n\r\n    const prev = () => {\r\n        if (startIdx - step >= 0) {\r\n            setStartIdx(prev => prev -= step);\r\n            if (endIdx - step < arr.length) setEndIdx(step)\r\n            else setEndIdx(prev => prev -= step);\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return {startIdx, endIdx, next, prev}\r\n\r\n};\r\n\r\nexport default usePagination;","import {useEffect, useState} from 'react';\r\n\r\nconst useProgressiveImage = (src: string) => {\r\n    const [sourceLoaded, setSourceLoaded] = useState<null | string>(null);\r\n\r\n    useEffect(() => {\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.onload = () => setSourceLoaded(src);\r\n    }, [src]);\r\n\r\n    return sourceLoaded;\r\n};\r\n\r\nexport default useProgressiveImage;","import styled from 'styled-components';\r\n\r\ntype MainProps = {\r\n    img: null | string,\r\n    isLatest?: boolean\r\n}\r\n\r\nexport const StyledCard = styled.div<MainProps>`\r\n\r\n  font-family: 'Ubuntu', sans-serif;\r\n\r\n  .card {\r\n    position: relative;\r\n    overflow: hidden;\r\n\r\n    width: ${props => props.isLatest ? '478px' : '280px'};\r\n    height: ${props => props.isLatest ? '678px' : '425px'};\r\n\r\n    @media only screen and (max-width: 600px) {\r\n      & {\r\n        width: 100%;\r\n        height: ${props => props.isLatest ? '80vh' : '325px'};\r\n      }\r\n    }\r\n\r\n    border-radius: 6px;\r\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n    transition: box-shadow 0.56s ease-in-out;\r\n\r\n    .card-content {\r\n      display: flex;\r\n      height: 100%;\r\n      justify-content: space-between;\r\n      flex-direction: column;\r\n\r\n      .top-row {\r\n        margin: 10px 15px 10px 15px;\r\n      }\r\n\r\n      .card-header {\r\n        color: #fff;\r\n        opacity: .9;\r\n        font-size: 20px;\r\n        line-height: 28px;\r\n        margin: 0 15px 10px 15px;\r\n        font-weight: 500;\r\n        display: -webkit-box;\r\n        -webkit-box-orient: vertical;\r\n        -moz-box-orient: vertical;\r\n        -ms-box-orient: vertical;\r\n        box-orient: vertical;\r\n        -webkit-line-clamp: 3;\r\n        -moz-line-clamp: 3;\r\n        -ms-line-clamp: 3;\r\n        line-clamp: 3;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .card-summary {\r\n        color: #fff;\r\n        opacity: .75;\r\n        font-size: 12px;\r\n        line-height: 18px;\r\n        margin: 0 15px 5px 15px;\r\n        font-weight: 400;\r\n        display: -webkit-box;\r\n        -webkit-box-orient: vertical;\r\n        -moz-box-orient: vertical;\r\n        -ms-box-orient: vertical;\r\n        box-orient: vertical;\r\n        -webkit-line-clamp: 3;\r\n        -moz-line-clamp: 3;\r\n        -ms-line-clamp: 3;\r\n        line-clamp: 3;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .card-footer {\r\n        margin: 0 15px 0px 15px;\r\n        font-weight: 400;\r\n        font-size: 12px;\r\n        color: #fff;\r\n        opacity: .75;\r\n\r\n        .bookmark-btn {\r\n          border: none;\r\n          padding: 5px;\r\n          background-color: transparent;\r\n          color: #fff;\r\n          opacity: .75;\r\n        }\r\n      }\r\n\r\n      .bookmark-source {\r\n        opacity: 0.5;\r\n        color: #fff;\r\n        font-size: 10px;\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      .latest-label {\r\n        text-align: end;\r\n        font-size: 8px;\r\n        line-height: 9px;\r\n        color: #fff;\r\n        letter-spacing: 0.06em;\r\n        font-family: 'Ubuntu', sans-serif;\r\n        border-radius: 2px;\r\n        padding: 4px 8px;\r\n        background-color: #b73556;\r\n      }\r\n\r\n\r\n    }\r\n\r\n    .related-label {\r\n      border-radius: 30px;\r\n      height: 21px;\r\n      font-size: 10px;\r\n      line-height: 0;\r\n      background-color: transparent;\r\n      border-color: #fff;\r\n      color: #fff;\r\n\r\n      &[ant-click-animating-without-extra-node='true']::after,\r\n      .ant-click-animating-node {\r\n        box-shadow: none !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .card:hover {\r\n    cursor: pointer;\r\n    box-shadow: rgba(255, 255, 255, 0.09) 0 5px 15px;\r\n  }\r\n\r\n  .has-bg-img {\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n  }\r\n\r\n  .bg-img-nature {\r\n    transition: ease all .3s;\r\n    opacity: 1;\r\n    background-image: linear-gradient(180deg, rgba(28, 58, 82, 0.4) 0%, rgba(5, 20, 27, 0.9) 75%), url(${props => props.img ? props.img : ''});\r\n  }\r\n`;","import React, {FC} from 'react';\r\nimport {updateBookmarkAction} from '../../store/news/actions';\r\nimport {BsBookmark, BsBookmarkFill} from 'react-icons/bs';\r\nimport {useProgressiveImage} from '../../hooks';\r\nimport {useDispatch} from 'react-redux';\r\nimport {StyledCard} from './StyledCard';\r\nimport {Button, Col, Row} from 'antd';\r\nimport {INews} from '../../types/news';\r\n\r\ntype MainProps = {\r\n    card: INews,\r\n    latest?: boolean\r\n}\r\n\r\nconst Card: FC<MainProps> = ({card, latest}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const imageLoaded = useProgressiveImage(card.image);\r\n\r\n    const toggleIsBookmark = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.stopPropagation();\r\n        dispatch(updateBookmarkAction(card.id, !card.isBookmark));\r\n    };\r\n\r\n    return (\r\n        <StyledCard img={imageLoaded} isLatest={latest}>\r\n            <div className=\"card has-bg-img bg-img-nature\">\r\n                <div className={'card-content'} onClick={() => {\r\n                    window.open(card.url, '_blank');\r\n                }}>\r\n                    <div>\r\n                        <Row className={'top-row'} justify={'space-between'}>\r\n                            <Col span={12}>\r\n                                <Button className={'related-label'}>\r\n                                    {card.related}\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                {card.isLatest\r\n                                && <span className={'latest-label'}>\r\n                                    LATEST RESEARCH\r\n                                </span>}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div>\r\n                        <Row className={'card-header'}>\r\n                            {card.headline}\r\n                        </Row>\r\n                        <Row className={'card-summary'}>\r\n                            {card.summary}\r\n                        </Row>\r\n                        <Row className={'card-footer'} justify={'space-between'} align={'middle'}>\r\n                            <Col>\r\n                                {card.datetime}\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    className={'bookmark-btn'}\r\n                                    shape={'circle'}\r\n                                    onClick={toggleIsBookmark}\r\n                                    icon={card.isBookmark ? <BsBookmarkFill size={20}/> : <BsBookmark size={20}/>}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row align={'middle'} justify={'center'} className={'bookmark-source'}>\r\n                            {card.source}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledCard>\r\n    );\r\n};\r\n\r\n\r\nexport default Card;","import styled from 'styled-components';\r\nimport {Button} from 'antd';\r\n\r\nexport const StyledPaginationButton = styled(Button)`\r\n  width: 116px;\r\n  height: 25px;\r\n  line-height: 11px;\r\n  border-radius: 60px;\r\n  padding: 7px;\r\n  color: #fff;\r\n  background-color: #3C3C3C;\r\n  border: none;\r\n  margin-left: 10px;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 700;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n\r\n  &:hover, &:focus {\r\n    background: #3C3C3C;\r\n    color: #fff;\r\n  }\r\n`;","import React, {FC} from 'react';\r\nimport {Col, Row} from 'antd';\r\nimport {StyledPaginationButton} from '../StyledPaginationButton';\r\nimport {INews} from '../../types/news';\r\n\r\ntype MainProps = {\r\n    data: INews[],\r\n    startIdx: number,\r\n    endIdx: number,\r\n    prev: () => void,\r\n    next: () => void\r\n}\r\n\r\nconst Pagination: FC<MainProps> = ({\r\n                                       data,\r\n                                       startIdx,\r\n                                       endIdx,\r\n                                       prev,\r\n                                       next\r\n                                   }) => {\r\n    return (\r\n        <>\r\n            {data.length >= 4\r\n            && <Row\r\n                className={'pagination-row'}\r\n                align={'middle'}\r\n                justify={'space-between'}\r\n            >\r\n                <Col className={'pagination-info'}>\r\n                    {startIdx === 0 ? 1 : startIdx}-{endIdx > data.length ? data.length : endIdx} &nbsp;\r\n                    <span style={{opacity: '.25'}}>out of {data.length}</span>\r\n                </Col>\r\n                <Row>\r\n                    <Col>\r\n                        <StyledPaginationButton onClick={prev}>\r\n                            previous\r\n                        </StyledPaginationButton>\r\n                    </Col>\r\n                    <Col>\r\n                        <StyledPaginationButton onClick={next}>\r\n                            next\r\n                        </StyledPaginationButton>\r\n                    </Col>\r\n                </Row>\r\n            </Row>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import styled from 'styled-components';\r\n\r\nconst StyledPageLayout = styled.div`\r\n  height: 911px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  .pagination-row {\r\n    width: 100%;\r\n    padding: 0 9px 0 9px;\r\n    font-family: 'Ubuntu', serif;\r\n  }\r\n\r\n  .pagination-info {\r\n    font-size: 12px;\r\n    color: #fff;\r\n    line-height: 14px\r\n  }\r\n\r\n  @media only screen and (min-width: 1440px) {\r\n    & {\r\n      .card-row {\r\n        justify-content: space-between;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledPageLayout;"],"sourceRoot":""}